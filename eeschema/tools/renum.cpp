#include    <sch_edit_frame.h>
#include    <wx_html_report_panel.h>
#include    <tools/backannotate.h>
#include    <renum_type.h>
//
// Get report for particular severity
// Used in renum to access errors and send them back to PCBNew
//

void GetTheReport(wxString &aReportString, WX_HTML_REPORT_PANEL *aReporter,
        const REPORTER::SEVERITY aSeverity) {

    for (auto rpt : aReporter->m_reportHead)
        if (aSeverity == rpt.severity)
            aReportString += rpt.message + "\n";

    for (auto rpt : aReporter->m_reportTail)
        if (aSeverity == rpt.severity)
            aReportString += rpt.message + "\n";

    for (auto rpt : aReporter->m_report)
        if (aSeverity == rpt.severity)
            aReportString += rpt.message + "\n";
}

void RenumberFromPCBNew(SCH_EDIT_FRAME *m_frame, std::string &aNetlist) {

    WX_HTML_REPORT_PANEL *reportwindowhtml = new WX_HTML_REPORT_PANEL(m_frame);

    BACK_ANNOTATE::SETTINGS settings = { reportwindowhtml->Reporter(), false, //processFootprints
            false,      //processValues
            true,       //processReferences
            false,      //ignoreStandaloneFootprints
            false,      //ignoreOtherProjects
            false };     //dryRun (not required)

    BACK_ANNOTATE backAnno(m_frame, settings);

    reportwindowhtml->Clear();
    reportwindowhtml->SetLazyUpdate(true); // Don't update after each message

    bool result = backAnno.BackAnnotateSymbols(aNetlist);
    wxString annotateerrors, annotatewarnings;

    GetTheReport(annotateerrors, reportwindowhtml, REPORTER::RPT_ERROR);
    GetTheReport(annotatewarnings, reportwindowhtml, REPORTER::RPT_WARNING);

    if (0 != annotatewarnings.size())      //errors will be empty if no errors
        annotateerrors += _("\nWarnings generated by eeSchema\n")
                + annotatewarnings;

    if (true != result) {
        aNetlist = _("\nErrors reported by eeSchema:\n")
                + annotateerrors.ToStdString();     //Assume the worst
        aNetlist += _(
                "\nAnnotation not performed!\nFix errors and try again.\n");
    } else {
            aNetlist = RENUM_OK;        //All is well
    }
}
